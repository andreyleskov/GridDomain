version: 1.0.{build}
branches:
  only:
  - develop
image: Ubuntu

install:
- sh: |
    
    . ./build/git_versioning.sh

    export APP_VERSION=${version}
    export FILE_VERSION=${fileVersion}
    export INFORMATIONAL_VERSION=${informationVersion}
- ps: Update-AppveyorBuild -Version $env:APP_VERSION
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '$(APP_VERSION)'
  package_version: '$(APP_VERSION)'
  assembly_version: '$(app_version)'
  file_version: '$(FILE_VERSION)'
  informational_version: '$(INFORMATIONAL_VERSION)'
environment:
  APPVEYOR_SSH_KEY: ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBI7S8beSMm0ePKq3CM3r4a0W/7OU+cwb8ZPyMoeeTtz0q0sPHoO1psD1jPh/2+v8UKToLdDJxhtxbkNTv8WeVME=
  APPVEYOR_SSH_BLOCK: true
  WriteModel: Server=localhost;Database=master;User ID=sa;Password=Password12!
  ReadModel: Server=localhost;Database=AutoTestRead;User ID=sa;Password=Password12!
  Quartz: Server=localhost;Database=Quartz;User ID=sa;Password=Password12!
services: mssql
build_script:
- sh: |
    dotnet build GridDomain.sln /p:Version=$APP_VERSION /p:FileVersion=$FILE_VERSION /p:InformationVersion="$INFORMATIONAL_VERSION"  -c Release -v Minimal /l:"/opt/appveyor/build-agent/AppVeyor.MSBuildLogger.dll"
    dotnet pack GridDomain.sln -c Release -v Minimal --include-symbols --include-source --no-build /l:"/opt/appveyor/build-agent/AppVeyor.MSBuildLogger.dll"
test_script:
- sh: |
    
    sqlcmd -S localhost -U SA -P 'Password12!' -Q 'select @@VERSION'

    sqlcmd -S localhost -U SA -P "Password12!" -Q "Use [master]; CREATE DATABASE [AutoTestRead];"

    sqlcmd -S localhost -U SA -P "Password12!" -i GridDomain.Node.Persistence.Sql/Persistence.sql

    sqlcmd -S localhost -U SA -P "Password12!" -i GridDomain.Node.Persistence.Sql/Human_schema.sql

    #mkdir ~/QuartzMemoryOptimizedData

    sqlcmd -S localhost -U SA -P "Password12!" -i GridDomain.Scheduling/CreateDatabase.sql

 
    #curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -

    . ./build/test.sh

    runTests UnitTests GridDomain.Tests.Unit Release
    runTests ClusterUnitTests GridDomain.Tests.Unit.Cluster Release
    runTests AcceptanceTests GridDomain.Tests.Acceptance Release
    runTests ScenarioTests GridDomain.Scenarios.Tests Release
    runTests ClusterAcceptanceTests GridDomain.Tests.Acceptance.Cluster Release


artifacts:
- path: '**\GridDomain.*.nupkg'
  name: Packages
- path: '**\*.zip'
  name: TestResults
deploy:
  - provider: Environment
    name: MyGet development feed